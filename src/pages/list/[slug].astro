---
import Layout from '../../layouts/Layout.astro';
import ErrorMessage from '../../components/ErrorMessage.astro';
import prisma from '../../lib/prisma';

const { slug } = Astro.params;
const error = Astro.url.searchParams.get('error');

const list = await prisma.list.findUnique({
  where: { slug },
  include: { links: true }
});

if (!list) {
  return Astro.redirect('/404');
}
---

<Layout title={list.title || 'Untitled List'}>
  <div class="max-w-4xl mx-auto">
    <div class="mb-8">
      <h1 class="text-3xl font-bold text-gray-900 mb-2">{list.title}</h1>
      {list.description && <p class="text-gray-600">{list.description}</p>}
    </div>

    {error && <ErrorMessage message={error} />}

    <div class="mb-8">
      <h2 class="text-xl font-semibold text-gray-900 mb-4">Add URL</h2>
      <form 
        action={`/api/lists/${list.slug}/links`} 
        method="POST" 
        class="flex gap-4"
        onsubmit="document.querySelector('[type=submit]').disabled = true;"
      >
        <input
          type="url"
          name="url"
          placeholder="https://example.com"
          required
          pattern="https?://.*"
          title="Please enter a valid URL starting with http:// or https://"
          class="flex-1 rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
        />
        <button
          type="submit"
          class="inline-flex justify-center rounded-md border border-transparent bg-indigo-600 px-4 py-2 text-sm font-medium text-white shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed"
        >
          Add URL
        </button>
      </form>
    </div>

    <div>
      <h2 class="text-xl font-semibold text-gray-900 mb-4">URLs in this list</h2>
      {list.links.length === 0 ? (
        <div class="text-center py-12 bg-white rounded-lg border border-gray-200">
          <svg
            class="mx-auto h-12 w-12 text-gray-400"
            fill="none"
            viewBox="0 0 24 24"
            stroke="currentColor"
            aria-hidden="true"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1"
            />
          </svg>
          <p class="mt-2 text-sm text-gray-500">No URLs added yet. Add your first URL above!</p>
        </div>
      ) : (
        <ul class="space-y-4">
          {list.links.map((link) => (
            <li class="bg-white rounded-lg shadow p-4">
              <div class="flex justify-between items-start">
                <div class="min-w-0 flex-1">
                  <h3 class="text-lg font-medium text-gray-900 truncate">
                    <a href={link.url} target="_blank" rel="noopener noreferrer" class="hover:text-indigo-600">
                      {link.title || link.url}
                    </a>
                  </h3>
                  {link.description && (
                    <p class="mt-1 text-sm text-gray-500 line-clamp-2">
                      {link.description}
                    </p>
                  )}
                  <p class="mt-1 text-xs text-gray-400">{link.url}</p>
                </div>
                <form 
                  action={`/api/lists/${list.slug}/links/${link.id}`} 
                  method="POST" 
                  class="flex items-center ml-4"
                  onsubmit="return confirm('Are you sure you want to delete this URL?');"
                >
                  <input type="hidden" name="_method" value="DELETE" />
                  <button
                    type="submit"
                    class="text-gray-400 hover:text-red-500 transition-colors"
                    aria-label="Delete link"
                  >
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
                      <path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd" />
                    </svg>
                  </button>
                </form>
              </div>
            </li>
          ))}
        </ul>
      )}
    </div>

    <div class="mt-8 border-t pt-8">
      <h2 class="text-xl font-semibold text-gray-900 mb-4">List Actions</h2>
      <div class="flex gap-4">
        <button
          type="button"
          id="copyButton"
          class="inline-flex items-center px-4 py-2 border border-gray-300 shadow-sm text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
        >
          Copy List URL
        </button>
        <form 
          action={`/api/lists/${list.slug}`} 
          method="POST" 
          class="inline-block"
          onsubmit="return confirm('Are you sure you want to delete this list? This action cannot be undone.');"
        >
          <input type="hidden" name="_method" value="DELETE" />
          <button
            type="submit"
            class="inline-flex items-center px-4 py-2 border border-red-300 shadow-sm text-sm font-medium rounded-md text-red-700 bg-white hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500"
          >
            Delete List
          </button>
        </form>
      </div>
    </div>
  </div>

  <script>
    const copyButton = document.getElementById('copyButton');
    if (copyButton) {
      copyButton.addEventListener('click', () => {
        navigator.clipboard.writeText(window.location.href);
        copyButton.textContent = 'Copied!';
        setTimeout(() => {
          copyButton.textContent = 'Copy List URL';
        }, 2000);
      });
    }

    // Re-enable submit buttons after navigation
    window.addEventListener('pageshow', () => {
      document.querySelectorAll('button[type="submit"]').forEach(button => {
        (button as HTMLButtonElement).disabled = false;
      });
    });
  </script>
</Layout>